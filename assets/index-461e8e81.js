import{j as e,r as m}from"./index-6767ac81.js";import{D as u}from"./DemoLayout-3595de25.js";import{U as o}from"./Upload-1c01a3b3.js";import{B as f}from"./Button-edcd26d9.js";import{b7 as x,aM as h}from"./index.esm-107f547f.js";import{m as g}from"./index.esm-de6d09c0.js";import{A as j}from"./index-688b9e70.js";import"./AdaptableCard-1cecc9da.js";import"./Card-da872ceb.js";import"./Views-e5205a91.js";import"./Affix-bd237bf0.js";import"./Tooltip-777f9f9c.js";import"./usePopper-ba5004dc.js";import"./index.esm-52ddd804.js";import"./index-fb02f18d.js";import"./SyntaxHighlighter-7b64a68f.js";import"./toConsumableArray-af8bf1ee.js";import"./objectWithoutPropertiesLoose-df62547b.js";import"./index-0b80b8cd.js";import"./DemoComponentApi-5636f861.js";import"./index-d5eb49a4.js";import"./index.esm-ad20eb15.js";import"./cloneDeep-028f7085.js";import"./_Uint8Array-81109713.js";import"./_MapCache-5db605d8.js";import"./_getPrototype-48c0ebaa.js";import"./index.esm-3da06225.js";import"./CloseButton-5ef937e0.js";import"./toast-33e99923.js";import"./useTimeout-395cc71e.js";import"./StatusIcon-33312305.js";import"./chainedFunction-070f832c.js";import"./context-cdfa92ed.js";import"./useMergeRef-788c4cb0.js";const b=()=>e.jsx("div",{children:e.jsx(o,{})}),U=()=>e.jsx("div",{children:e.jsx(o,{draggable:!0})}),v=()=>e.jsxs("div",{children:[e.jsx("div",{className:"mb-6",children:e.jsx(o,{disabled:!0})}),e.jsx("div",{children:e.jsx(o,{draggable:!0,disabled:!0})})]}),N=()=>{const l=(d,t)=>{let a=!0;const s=["image/jpeg","image/png"],p=5e5;if(t.length>=2)return"You can only upload 2 file(s)";if(d)for(const n of d)s.includes(n.type)||(a="Please upload a .jpeg or .png file!"),n.size>=p&&(a="Upload image cannot more then 500kb!");return a},r=e.jsx("p",{className:"mt-2",children:"jpeg or png only (max 500kb)"});return e.jsx("div",{children:e.jsx(o,{beforeUpload:l,uploadLimit:2,tip:r})})},y=()=>e.jsxs("div",{children:[e.jsx("div",{className:"mb-4",children:e.jsx(o,{children:e.jsx(f,{variant:"solid",icon:e.jsx(x,{}),children:"Upload your file"})})}),e.jsx("div",{children:e.jsx(o,{draggable:!0,children:e.jsxs("div",{className:"my-16 text-center",children:[e.jsx("div",{className:"text-6xl mb-4 flex justify-center",children:e.jsx(g,{})}),e.jsxs("p",{className:"font-semibold",children:[e.jsxs("span",{className:"text-gray-800 dark:text-white",children:["Drop your image here, or"," "]}),e.jsx("span",{className:"text-blue-500",children:"browse"})]}),e.jsx("p",{className:"mt-1 opacity-60 dark:text-white",children:"Support: jpeg, png, gif"})]})})})]}),w=()=>{const[c,l]=m.useState(null),r=t=>{t.length>0&&l(URL.createObjectURL(t[0]))},d=t=>{let a=!0;const s=["image/jpeg","image/png"];if(t)for(const p of t)s.includes(p.type)||(a="Please upload a .jpeg or .png file!");return a};return e.jsx("div",{children:e.jsx(o,{className:"cursor-pointer",showList:!1,uploadLimit:1,beforeUpload:d,onChange:r,children:e.jsx(j,{size:80,src:c,icon:e.jsx(h,{})})})})},i="Upload",F={title:"Upload",desc:"Upload is a component that allow user to attach files & images, it can be used with form and upload the data to some where else."},D=[{mdName:"Basic",mdPath:i,title:"Basic",desc:"A basic Upload example.",component:e.jsx(b,{})},{mdName:"DragAndDrop",mdPath:i,title:"Drag and Drop",desc:"With <code>draggable</code> prop, we can drag files to a specific area to proceed upload.",component:e.jsx(U,{})},{mdName:"Disabled",mdPath:i,title:"Disabled",desc:"Disabled the Upload component by setting <code>disabled</code> to true.",component:e.jsx(v,{})},{mdName:"Customize",mdPath:i,title:"Customize",desc:"We can replace the default upload look.",component:e.jsx(y,{})},{mdName:"BeforeUpload",mdPath:i,title:"Upload Control",desc:"Use <code>beforeUpload</code> prop to make a callback function to validate file before upload.",component:e.jsx(N,{})},{mdName:"AvatarImage",mdPath:i,title:"Avatar",desc:"An example for avatar upload",component:e.jsx(w,{})}],A=[{component:"Upload",api:[{propName:"accept",type:"<code>string</code>",default:"-",desc:"File types that can be accepted as input accept attribute"},{propName:"beforeUpload",type:"<code>(file: FileList | null, fileList: File[]) => boolean | string</code>",default:"-",desc:"The callback function that before file upload, return false or string with value to intercept the upload"},{propName:"disabled",type:"<code>boolean</code>",default:"<code>false</code>",desc:"Whether to disable Upload"},{propName:"draggable",type:"<code>boolean</code>",default:"<code>false</code>",desc:"Whether enable draggable upload"},{propName:"fileList",type:"<code>File[]</code>",default:"<code>[]</code>",desc:"Initial file list"},{propName:"onChange",type:"<code>(file: File[], fileList: File[]) => void</code>",default:"-",desc:"Callback function after file uploaded"},{propName:"onFileRemove",type:"<code>(file: File[]) => void</code>",default:"-",desc:"Callback function when a file was deleted"},{propName:"showList",type:"<code>boolean</code>",default:"<code>true</code>",desc:"Whether to show uploaded file list"},{propName:"tip",type:"<code>string</code> | <code>ReactNode</code>",default:"-",desc:"Hint message under Upload"}]}],se=()=>e.jsx(u,{header:F,demos:D,api:A});export{se as default};
