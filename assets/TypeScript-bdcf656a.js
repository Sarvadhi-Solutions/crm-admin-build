import{j as e}from"./index-b09faefa.js";import{S as i}from"./SyntaxHighlighter-e97b96e2.js";import"./objectWithoutProperties-8e2777d0.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./toConsumableArray-f69b773e.js";import"./extends-98964cd2.js";const a=()=>e.jsxs(e.Fragment,{children:[e.jsx("p",{children:"This guide will walk you through the process of configuring TypeScript settings and leveraging its features in Elsatr. Developed entirely in TypeScript, Elstar allowing you to write type-safe and scalable code building modern web applications with ease."}),e.jsxs("div",{className:"mt-10",id:"ts-config",children:[e.jsx("h5",{children:"Configuring TypeScript Settings"}),e.jsxs("p",{children:["The configuration of typescript plays a crucial role in TypeScript projects. It allows you to define and customize various compiler options to fit your project's requirements, you can tweak the config via"," ",e.jsx("code",{children:"tsconfig.json"})]})]}),e.jsxs("div",{className:"mt-10",id:"ts-config",children:[e.jsx("h5",{children:"Configuring TypeScript Settings"}),e.jsx("p",{children:"We understand that not everyone may be comfortable with TypeScript's strict type checking. To cater to developers who prefer a more JavaScript-like experience, Typescript allows you to configure weak type checking"}),e.jsx("p",{children:"Here's an example tsconfig.json configuration for weak type checking:"}),e.jsx(i,{language:"json",children:`{
  "compilerOptions": {
    "strict": false,
    ...
  }
}`}),e.jsx("p",{children:"This configuration enables weak type checking, allowing you to write code that feels closer to JavaScript."})]})]});export{a as default};
