import{j as t}from"./index-a9c93031.js";import{D as e}from"./DemoLayout-29dfdcad.js";import{C as o}from"./Views-0c5423a6.js";import"./AdaptableCard-cf701c87.js";import"./Card-6b8166bd.js";import"./Affix-44c84a49.js";import"./Button-47bf58f7.js";import"./context-6d5d8fe5.js";import"./Tooltip-4f11c588.js";import"./usePopper-0066ca78.js";import"./index.esm-2eb9a221.js";import"./index-0b68a97f.js";import"./index.esm-37c3564c.js";import"./SyntaxHighlighter-2ddb351b.js";import"./objectWithoutProperties-8e2777d0.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./toConsumableArray-ccb51e40.js";import"./extends-98964cd2.js";import"./index-15ad1e57.js";import"./DemoComponentApi-407323db.js";import"./index-10dbbba6.js";import"./index.esm-556fe943.js";const r=()=>t.jsx(o,{children:"Content"}),i="ContainerDoc",m={title:"Container",desc:"Container is acomponent for fixing an elements width to the current breakpoint, it given a <code>max-width</code> to an element and match the <code>min-width</code> of the current breakpoint."},n=[{mdName:"Example",mdPath:i,title:"Example",desc:"Example usage",component:t.jsx(r,{})}],a=[{component:"Container",api:[{propName:"asElement",type:"<code>string</code>",default:"<code>'div'</code>",desc:"Render element"}]}],A=()=>t.jsx(e,{innerFrame:!1,header:m,demos:n,api:a,mdPrefixPath:"shared"});export{A as default};
