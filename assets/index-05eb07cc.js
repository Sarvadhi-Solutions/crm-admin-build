import{am as x,an as D,ao as E,ap as S,ar as j,a as y,ab as N,aq as b,r as F,j as s,ai as w}from"./index-2a02f09f.js";import{D as A}from"./DoubleSidedImage-19b756b2.js";import{t as R,N as v}from"./toast-66eca971.js";import{d as C,e as I,c as L}from"./SalesService-f5b3b642.js";import{P as $}from"./ProductForm-6bf162a2.js";import{i as d}from"./Views-597fd265.js";import"./useTimeout-90c2003f.js";import"./CloseButton-1ba6d0ce.js";import"./index.esm-c61f0406.js";import"./StatusIcon-19ebbef4.js";import"./chainedFunction-070f832c.js";import"./FormItem-c05bb264.js";import"./context-ccc0a902.js";import"./index-30fffd86.js";import"./Button-3d6c325f.js";import"./index-b6583a03.js";import"./useControllableState-1afbd3cb.js";import"./useDidUpdate-63a48c56.js";import"./useMergeRef-788c4cb0.js";import"./useRootClose-245ef2ef.js";import"./useUncertainRef-cde3ec19.js";import"./useUniqueId-5771e452.js";import"./toString-8660963f.js";import"./Dialog-fa942d86.js";import"./index-02c6e7a7.js";import"./StickyFooter-a41c27ee.js";import"./ConfirmDialog-5e3e2ca4.js";import"./index-5ca6dc5a.js";import"./Tooltip-7716d794.js";import"./usePopper-1bbb94fb.js";import"./index.esm-c0bac851.js";import"./formik.esm-dba0dfcc.js";import"./AdaptableCard-260ffff4.js";import"./Card-de52f0bd.js";import"./RichTextEditor-c3d66539.js";import"./_baseIsEqual-d37b49c3.js";import"./_Uint8Array-49dd6612.js";import"./_MapCache-dabc1c97.js";import"./Input-4032ba6b.js";import"./isNil-68e69365.js";import"./get-c92f924e.js";import"./react-number-format.es-b6150c61.js";import"./Select-e6a28a89.js";import"./toConsumableArray-648e2274.js";import"./objectWithoutPropertiesLoose-df62547b.js";import"./floating-ui.dom-bef9cea3.js";import"./react-select-creatable.esm-00e0f6bd.js";import"./Upload-21ca1a8f.js";import"./cloneDeep-f2fd7982.js";import"./_getPrototype-63f10215.js";import"./index.esm-62b86c40.js";import"./index.esm-1c4998f8.js";import"./index.esm-d97e517c.js";const u="salesProductEdit",c=x(u+"/getProducts",async a=>(await C(a)).data),k=async a=>(await I(a)).data,q=async a=>(await L(a)).data,M={loading:!0,productData:{}},G=D({name:`${u}/state`,initialState:M,reducers:{},extraReducers:a=>{a.addCase(c.fulfilled,(o,e)=>{o.productData=e.payload,o.loading=!1}).addCase(c.pending,o=>{o.loading=!0})}}),O=G.reducer,T=E({data:O}),m=S;j("salesProductEdit",T);const _=()=>{const a=y(),o=N(),e=b(),i=m(t=>t.salesProductEdit.data.productData),p=m(t=>t.salesProductEdit.data.loading),l=t=>{a(c(t))},f=async(t,r)=>{r(!0);const P=await k(t);r(!1),P&&n("updated")},h=()=>{e("/app/sales/product-list")},g=async t=>{t(!1),await q({id:i.id})&&n("deleted")},n=t=>{R.push(s.jsxs(v,{title:`Successfuly ${t}`,type:"success",duration:2500,children:["Product successfuly ",t]}),{placement:"top-center"}),e("/app/sales/product-list")};return F.useEffect(()=>{const r={id:o.pathname.substring(o.pathname.lastIndexOf("/")+1)};l(r)},[o.pathname]),s.jsxs(s.Fragment,{children:[s.jsx(w,{loading:p,children:!d(i)&&s.jsx(s.Fragment,{children:s.jsx($,{type:"edit",initialData:i,onFormSubmit:f,onDiscard:h,onDelete:g})})}),!p&&d(i)&&s.jsxs("div",{className:"h-full flex flex-col items-center justify-center",children:[s.jsx(A,{src:"/img/others/img-2.png",darkModeSrc:"/img/others/img-2-dark.png",alt:"No product found!"}),s.jsx("h3",{className:"mt-8",children:"No product found!"})]})]})},_t=_;export{_t as default};
