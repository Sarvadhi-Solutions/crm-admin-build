import{j as o}from"./index-04de45f1.js";import{D as r}from"./DemoComponentApi-46ba6f54.js";import{D as e}from"./DemoLayout-89a84ba0.js";import{S as t}from"./SyntaxHighlighter-b6d1a340.js";import"./index-f4f40370.js";import"./index.esm-bec52084.js";import"./index-5ffe062f.js";import"./AdaptableCard-b66d711f.js";import"./Card-5dadf163.js";import"./Views-9d427d6f.js";import"./Affix-efc50e98.js";import"./Button-c014eb4a.js";import"./context-3f43d22b.js";import"./Tooltip-8263a1ca.js";import"./usePopper-301f1b7b.js";import"./index.esm-86efb1ff.js";import"./index-5206a52a.js";import"./index.esm-dece01db.js";import"./toConsumableArray-c4879a90.js";import"./objectWithoutPropertiesLoose-df62547b.js";const i=()=>o.jsx(t,{language:"js",children:`import growShrinkColor from '@/utils/growShrinkColor'

const positive = growShrinkColor(1, 'bg') //output: 'bg-emerald-100 dark:bg-emerald-500/20 dark:text-emerald-100'

const negative = growShrinkColor(-1, 'text') //output: 'text-red-600 dark:text-red-500'

`}),p="GrowShrinkColorDoc",m={title:"growShrinkColor",desc:"growShrinkColor generated grow shrink status color css class for text or background."},a=[{mdName:"Example",mdPath:p,title:"Example",desc:"",component:o.jsx(i,{})}],s=[{component:"growShrinkColor",api:[{propName:"value",type:"<code>number</code>",default:"",desc:"Number value"},{propName:"type",type:"<code>'bg'</code> | <code>'type'</code>",default:"<code>'bg'</code> ",desc:"Class for text or background"}]}],d=o.jsx(r,{hideApiTitle:!0,keyText:"return",api:[{api:[{propName:"class",type:"<code>string</code>",default:"-",desc:"Output tailwind css class"}]}]}),T=()=>o.jsx(e,{hideApiTitle:!0,hideFooter:!0,innerFrame:!1,header:m,demos:a,api:s,mdPrefixPath:"utils",extra:d,keyText:"param"});export{T as default};
