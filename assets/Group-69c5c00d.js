const g="data:text/markdown;base64,YGBganN4CmltcG9ydCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnCmltcG9ydCBUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvdWkvVGFibGUnCmltcG9ydCB7CiAgICB1c2VSZWFjdFRhYmxlLAogICAgZ2V0Q29yZVJvd01vZGVsLAogICAgZmxleFJlbmRlciwKfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtdGFibGUnCmltcG9ydCB7IGRhdGExMCB9IGZyb20gJy4vZGF0YScKaW1wb3J0IHR5cGUgeyBQZXJzb24gfSBmcm9tICcuL2RhdGEnCmltcG9ydCB0eXBlIHsgQ29sdW1uRGVmIH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXRhYmxlJwoKY29uc3QgeyBUciwgVGgsIFRkLCBUSGVhZCwgVEJvZHkgfSA9IFRhYmxlCgpjb25zdCBHcm91cCA9ICgpID0+IHsKICAgIGNvbnN0IFtkYXRhXSA9IHVzZVN0YXRlKCgpID0+IGRhdGExMCkKCiAgICBjb25zdCBjb2x1bW5zID0KICAgICAgICB1c2VNZW1vIDwKICAgICAgICBDb2x1bW5EZWYgPAogICAgICAgIFBlcnNvbiA+CiAgICAgICAgW10gPgogICAgICAgICgoKSA9PiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlYWRlcjogJ05hbWUnLAogICAgICAgICAgICAgICAgY29sdW1uczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnRmlyc3QgTmFtZScsCiAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yS2V5OiAnZmlyc3ROYW1lJywKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnTGFzdCBOYW1lJywKICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3JLZXk6ICdsYXN0TmFtZScsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlYWRlcjogJ0luZm8nLAogICAgICAgICAgICAgICAgY29sdW1uczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnRW1haWwnLAogICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcktleTogJ2VtYWlsJywKICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDUwLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6ICdWaXNpdHMnLAogICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcktleTogJ2dlbmRlcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MCwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIFtdKQoKICAgIGNvbnN0IHRhYmxlID0gdXNlUmVhY3RUYWJsZSh7CiAgICAgICAgZGF0YSwKICAgICAgICBjb2x1bW5zLAogICAgICAgIGdldENvcmVSb3dNb2RlbDogZ2V0Q29yZVJvd01vZGVsKCksCiAgICB9KQoKICAgIHJldHVybiAoCiAgICAgICAgPFRhYmxlPgogICAgICAgICAgICA8VEhlYWQ+CiAgICAgICAgICAgICAgICB7dGFibGUuZ2V0SGVhZGVyR3JvdXBzKCkubWFwKChoZWFkZXJHcm91cCkgPT4gKAogICAgICAgICAgICAgICAgICAgIDxUciBrZXk9e2hlYWRlckdyb3VwLmlkfT4KICAgICAgICAgICAgICAgICAgICAgICAge2hlYWRlckdyb3VwLmhlYWRlcnMubWFwKChoZWFkZXIpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRoIGtleT17aGVhZGVyLmlkfSBjb2xTcGFuPXtoZWFkZXIuY29sU3Bhbn0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmbGV4UmVuZGVyKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyLmNvbHVtbi5jb2x1bW5EZWYuaGVhZGVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyLmdldENvbnRleHQoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0pfQogICAgICAgICAgICAgICAgICAgIDwvVHI+CiAgICAgICAgICAgICAgICApKX0KICAgICAgICAgICAgPC9USGVhZD4KICAgICAgICAgICAgPFRCb2R5PgogICAgICAgICAgICAgICAge3RhYmxlLmdldFJvd01vZGVsKCkucm93cy5tYXAoKHJvdykgPT4gewogICAgICAgICAgICAgICAgICAgIHJldHVybiAoCiAgICAgICAgICAgICAgICAgICAgICAgIDxUciBrZXk9e3Jvdy5pZH0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cm93LmdldFZpc2libGVDZWxscygpLm1hcCgoY2VsbCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZCBrZXk9e2NlbGwuaWR9PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2ZsZXhSZW5kZXIoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5jb2x1bW4uY29sdW1uRGVmLmNlbGwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5nZXRDb250ZXh0KCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9CiAgICAgICAgICAgICAgICAgICAgICAgIDwvVHI+CiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfSl9CiAgICAgICAgICAgIDwvVEJvZHk+CiAgICAgICAgPC9UYWJsZT4KICAgICkKfQoKZXhwb3J0IGRlZmF1bHQgR3JvdXAKYGBgCg==";export{g as default};
