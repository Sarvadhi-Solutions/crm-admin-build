import{j as t}from"./index-f40e4d75.js";import{D as e}from"./DemoLayout-cfdcd7ef.js";import{C as o}from"./Views-4f4cfc12.js";import"./AdaptableCard-37b8494e.js";import"./Card-902c739e.js";import"./Affix-93157901.js";import"./Button-50d583fa.js";import"./context-51e9908c.js";import"./Tooltip-b58b263b.js";import"./usePopper-65abd083.js";import"./index.esm-2a4fc148.js";import"./index-ae89c783.js";import"./index.esm-0d86f991.js";import"./SyntaxHighlighter-3d3333b2.js";import"./objectWithoutProperties-8e2777d0.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./toConsumableArray-b6817789.js";import"./extends-98964cd2.js";import"./index-c3422a4c.js";import"./DemoComponentApi-710da467.js";import"./index-a0876546.js";import"./index.esm-939b12b7.js";const r=()=>t.jsx(o,{children:"Content"}),i="ContainerDoc",m={title:"Container",desc:"Container is acomponent for fixing an elements width to the current breakpoint, it given a <code>max-width</code> to an element and match the <code>min-width</code> of the current breakpoint."},n=[{mdName:"Example",mdPath:i,title:"Example",desc:"Example usage",component:t.jsx(r,{})}],a=[{component:"Container",api:[{propName:"asElement",type:"<code>string</code>",default:"<code>'div'</code>",desc:"Render element"}]}],A=()=>t.jsx(e,{innerFrame:!1,header:m,demos:n,api:a,mdPrefixPath:"shared"});export{A as default};
