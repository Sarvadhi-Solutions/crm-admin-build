const g="data:text/markdown;base64,YGBganN4CmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiwgQ2hhbmdlRXZlbnQgfSBmcm9tICdyZWFjdCcKaW1wb3J0IEJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvdWkvQnV0dG9uJwppbXBvcnQgSW5wdXQgZnJvbSAnQC9jb21wb25lbnRzL3VpL0lucHV0JwppbXBvcnQgRGF0YVRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9zaGFyZWQvRGF0YVRhYmxlJwppbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCB0eXBlIHsgQ29sdW1uRGVmLCBPblNvcnRQYXJhbSwgQ2VsbENvbnRleHQgfSBmcm9tICdAL2NvbXBvbmVudHMvc2hhcmVkL0RhdGFUYWJsZScKCnR5cGUgQ3VzdG9tZXIgPSB7CiAgICBpZDogc3RyaW5nOwogICAgbmFtZTogc3RyaW5nOwogICAgZW1haWw6IHN0cmluZzsKfQoKY29uc3QgUXVlcnkgPSAoKSA9PiB7CiAgICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShbXSkKICAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKQogICAgY29uc3QgW3RhYmxlRGF0YSwgc2V0VGFibGVEYXRhXSA9IHVzZVN0YXRlPHsKICAgICAgICBwYWdlSW5kZXg6IG51bWJlcgogICAgICAgIHBhZ2VTaXplOiBudW1iZXIKICAgICAgICBzb3J0OiB7CiAgICAgICAgICAgIG9yZGVyOiAnJyB8ICdhc2MnIHwgJ2Rlc2MnCiAgICAgICAgICAgIGtleTogc3RyaW5nIHwgbnVtYmVyOwogICAgICAgIH07CiAgICAgICAgcXVlcnk6IHN0cmluZwogICAgICAgIHRvdGFsOiBudW1iZXIKICAgIH0+KHsKICAgICAgICB0b3RhbDogMCwKICAgICAgICBwYWdlSW5kZXg6IDEsCiAgICAgICAgcGFnZVNpemU6IDEwLAogICAgICAgIHF1ZXJ5OiAnJywKICAgICAgICBzb3J0OiB7CiAgICAgICAgICAgIG9yZGVyOiAnJywKICAgICAgICAgICAga2V5OiAnJywKICAgICAgICB9LAogICAgfSkKCiAgICBjb25zdCBpbnB1dFJlZiA9IHVzZVJlZihudWxsKQoKICAgIGNvbnN0IGRlYm91bmNlRm4gPSBkZWJvdW5jZShoYW5kbGVEZWJvdW5jZUZuLCA1MDApCgogICAgZnVuY3Rpb24gaGFuZGxlRGVib3VuY2VGbih2YWw6IHN0cmluZykgewogICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJyAmJiAodmFsLmxlbmd0aCA+IDEgfHwgdmFsLmxlbmd0aCA9PT0gMCkpIHsKICAgICAgICAgICAgc2V0VGFibGVEYXRhKChwcmV2RGF0YSkgPT4gKHsKICAgICAgICAgICAgICAgIC4uLnByZXZEYXRhLAogICAgICAgICAgICAgICAgLi4ueyBxdWVyeTogdmFsLCBwYWdlSW5kZXg6IDEgfSwKICAgICAgICAgICAgfSkpCiAgICAgICAgfQogICAgfQoKICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gewogICAgICAgIGRlYm91bmNlRm4oZS50YXJnZXQudmFsdWUpCiAgICB9CgogICAgY29uc3QgaGFuZGxlQWN0aW9uID0gKGNlbGxQcm9wczogQ2VsbENvbnRleHQ8Q3VzdG9tZXIsIHVua25vd24+KSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ0FjdGlvbiBjbGlja2VkJywgY2VsbFByb3BzKQogICAgfQoKICAgIGNvbnN0IGNvbHVtbnM6IENvbHVtbkRlZjxDdXN0b21lcj5bXSA9IFsKICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcjogJ05hbWUnLAogICAgICAgICAgICBhY2Nlc3NvcktleTogJ25hbWUnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICBoZWFkZXI6ICdFbWFpbCcsCiAgICAgICAgICAgIGFjY2Vzc29yS2V5OiAnZW1haWwnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICBoZWFkZXI6ICcnLAogICAgICAgICAgICBpZDogJ2FjdGlvbicsCiAgICAgICAgICAgIGNlbGw6IChwcm9wcykgPT4gKAogICAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPSJ4cyIgb25DbGljaz17KCkgPT4gaGFuZGxlQWN0aW9uKHByb3BzKX0+CiAgICAgICAgICAgICAgICAgICAgQWN0aW9uCiAgICAgICAgICAgICAgICA8L0J1dHRvbj4KICAgICAgICAgICAgKSwKICAgICAgICB9LAogICAgXQoKICAgIGNvbnN0IGhhbmRsZVBhZ2luYXRpb25DaGFuZ2UgPSAocGFnZUluZGV4OiBudW1iZXIpID0+IHsKICAgICAgICBzZXRUYWJsZURhdGEoKHByZXZEYXRhKSA9PiAoeyAuLi5wcmV2RGF0YSwgLi4ueyBwYWdlSW5kZXggfSB9KSkKICAgIH0KCiAgICBjb25zdCBoYW5kbGVTZWxlY3RDaGFuZ2UgPSAocGFnZVNpemU6IG51bWJlcikgPT4gewogICAgICAgIHNldFRhYmxlRGF0YSgocHJldkRhdGEpID0+ICh7IC4uLnByZXZEYXRhLCAuLi57IHBhZ2VTaXplIH0gfSkpCiAgICB9CgogICAgY29uc3QgaGFuZGxlU29ydCA9ICh7IG9yZGVyLCBrZXkgfTogT25Tb3J0UGFyYW0pID0+IHsKICAgICAgICBjb25zb2xlLmxvZyh7IG9yZGVyLCBrZXkgfSkKICAgICAgICBzZXRUYWJsZURhdGEoKHByZXZEYXRhKSA9PiAoewogICAgICAgICAgICAuLi5wcmV2RGF0YSwKICAgICAgICAgICAgLi4ueyBzb3J0OiB7IG9yZGVyLCBrZXkgfSB9LAogICAgICAgIH0pKQogICAgfQoKICAgIHVzZUVmZmVjdCgoKSA9PiB7CiAgICAgICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4gewogICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpCiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9jcm0vY3VzdG9tZXJzJywgdGFibGVEYXRhKQogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSkgewogICAgICAgICAgICAgICAgc2V0RGF0YShyZXNwb25zZS5kYXRhLmRhdGEpCiAgICAgICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKQogICAgICAgICAgICAgICAgc2V0VGFibGVEYXRhKChwcmV2RGF0YSkgPT4gKHsKICAgICAgICAgICAgICAgICAgICAuLi5wcmV2RGF0YSwKICAgICAgICAgICAgICAgICAgICAuLi57IHRvdGFsOiByZXNwb25zZS5kYXRhLnRvdGFsIH0sCiAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBmZXRjaERhdGEoKQogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMKICAgIH0sIFsKICAgICAgICB0YWJsZURhdGEucGFnZUluZGV4LAogICAgICAgIHRhYmxlRGF0YS5zb3J0LAogICAgICAgIHRhYmxlRGF0YS5wYWdlU2l6ZSwKICAgICAgICB0YWJsZURhdGEucXVlcnksCiAgICBdKQoKICAgIHJldHVybiAoCiAgICAgICAgPD4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXgganVzdGlmeS1lbmQgbWItNCI+CiAgICAgICAgICAgICAgICA8SW5wdXQKICAgICAgICAgICAgICAgICAgICByZWY9e2lucHV0UmVmfQogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJTZWFyY2guLi4iCiAgICAgICAgICAgICAgICAgICAgc2l6ZT0ic20iCiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSJsZzp3LTUyIgogICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9CiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPERhdGFUYWJsZQogICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc30KICAgICAgICAgICAgICAgIGRhdGE9e2RhdGF9CiAgICAgICAgICAgICAgICBsb2FkaW5nPXtsb2FkaW5nfQogICAgICAgICAgICAgICAgcGFnaW5nRGF0YT17dGFibGVEYXRhfQogICAgICAgICAgICAgICAgb25QYWdpbmF0aW9uQ2hhbmdlPXtoYW5kbGVQYWdpbmF0aW9uQ2hhbmdlfQogICAgICAgICAgICAgICAgb25TZWxlY3RDaGFuZ2U9e2hhbmRsZVNlbGVjdENoYW5nZX0KICAgICAgICAgICAgICAgIG9uU29ydD17aGFuZGxlU29ydH0KICAgICAgICAgICAgLz4KICAgICAgICA8Lz4KICAgICkKfQoKZXhwb3J0IGRlZmF1bHQgUXVlcnkKYGBgCg==";export{g as default};
