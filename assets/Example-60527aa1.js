const g="data:text/markdown;base64,YGBganN4CmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnCmltcG9ydCBTd2l0Y2hlciBmcm9tICdAL2NvbXBvbmVudHMvdWkvU3dpdGNoZXInCmltcG9ydCBUZXh0QmxvY2tTa2VsZXRvbiBmcm9tICdAL2NvbXBvbmVudHMvc2hhcmVkL2xvYWRlcnMvVGV4dEJsb2NrU2tlbGV0b24nCgpjb25zdCBFeGFtcGxlID0gKCkgPT4gewogICAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpCgogICAgcmV0dXJuICgKICAgICAgICA8PgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgbWItNiBnYXAtMiI+CiAgICAgICAgICAgICAgICA8c3Bhbj5Mb2FkaW5nIFN0YXRlOiA8L3NwYW4+CiAgICAgICAgICAgICAgICA8U3dpdGNoZXIKICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtpc0xvYWRpbmd9CiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhjaGVja2VkKSA9PiBzZXRJc0xvYWRpbmcoIWNoZWNrZWQpfQogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJwcm9zZSI+CiAgICAgICAgICAgICAgICB7aXNMb2FkaW5nID8gKAogICAgICAgICAgICAgICAgICAgIDxUZXh0QmxvY2tTa2VsZXRvbiByb3dDb3VudD17NH0gLz4KICAgICAgICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICAgICAgICAgPD4KICAgICAgICAgICAgICAgICAgICAgICAgPGg0PldhbGwgb2YgdGV4dDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgS29waS1sdXdhaywgc2Vhc29uYWwgYnJldmUgc3Ryb25nIGNhZmZlaW5lIG1lZGl1bQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbHVuZ28gZ3JpbmRlci4gRXNwcmVzc28gZmlsdGVyLCBjYWbDqSBhdSBsYWl0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dXJraXNoLCBzd2VldCwgc2luZ2xlIHNob3QgaGFsZiBhbmQgaGFsZiBhbWVyaWNhbm8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlldHkgbW9jaGEgZXh0cmFjdGlvbi4gU2tpbm55IHRvIGdvLCBhIGJyZXdlZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vY2hhIHNpbmdsZSBvcmlnaW4sIHBsdW5nZXIgcG90IGN1cCBzdHJvbmcgd2hpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyaXBwZXIuIFNpbmdsZSBvcmlnaW4gcHVtcGtpbiBzcGljZSwgaW5zdGFudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1bHRpdmFyIGFtZXJpY2FubyBjcmVtYSBhcm9tYXRpYyBiYXIgY2Fmw6kgYXUgbGFpdC4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDwvPgogICAgICAgICAgICAgICAgKX0KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC8+CiAgICApCn0KCmV4cG9ydCBkZWZhdWx0IEV4YW1wbGUKYGBgCg==";export{g as default};
